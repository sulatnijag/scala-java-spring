plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'scala'
	id "com.github.davidmc24.gradle.plugin.avro" version "1.2.1"
}

group = 'com.explore'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url "https://packages.confluent.io/maven/"
	}
}

ext {
	avroVersion='1.10.1'
	kafkaVersion='0.11.0.1'
	confluentVersion='6.2.1'
	scalaVersion='2.13.6'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.scala-lang:scala-library:$scalaVersion"

	implementation "org.apache.kafka:kafka-clients:$kafkaVersion"
	implementation "org.apache.avro:avro:$avroVersion"
	//implementation "io.confluent:kafka-avro-serializer:$confluentVersion"
	implementation group: 'io.confluent', name: 'kafka-avro-serializer', version:"$confluentVersion"


	//compileOnly 'org.projectlombok:lombok'
	implementation 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

}


sourceSets {
	main {
		java {
			srcDirs = []
		}
		scala {
			srcDirs = ['src/main/avro','src/main/scala', 'src/main/java']
		}
	}

	test {
		java {
			srcDirs = ['src/test/java']
		}
		scala {
			srcDirs = ['src/test/scala']
		}
	}

}


test {
	useJUnitPlatform()

	testLogging {
		events "passed", "skipped", "failed"//, "standardOut", "standardError"
	}
}
